{"version":3,"sources":["components/list-statistics/listStatistics.module.css","components/feedback-options/feedback-options.module.css","components/section/section.module.css","components/list-statistics/ListStatistics.js","components/feedback-options/FeedbackOptions.js","components/notification/Notification.js","components/section/Section.js","components/App.js","index.js"],"names":["module","exports","Statistics","total","positivePercentage","feedbackKeys","feedbacksObj","map","feedback","className","styles","statistics","FeedbackOptions","onLeaveFeedback","list","type","name","buttonContainer","onClick","Notification","message","Section","title","children","section","App","useState","good","setGood","neutral","setNeutral","bad","setBad","Object","keys","countTotalFeedback","reduce","acc","countPositiveFeedbackPercentage","Math","round","e","target","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,WAAa,qC,kBCA/BD,EAAOC,QAAU,CAAC,KAAO,+BAA+B,gBAAkB,4C,iBCA1ED,EAAOC,QAAU,CAAC,QAAU,2B,sICiCbC,EA9BI,SAAC,GAKb,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEA,OACE,+BACGD,EAAaE,KAAI,SAAAC,GAAQ,OACxB,oBAAmBC,UAAWC,IAAOC,WAArC,SACE,iCACGH,EADH,IACcF,EAAaE,OAFpBA,MAMX,qBAAIC,UAAWC,IAAOC,WAAtB,mBAAyCR,KACzC,qBAAIM,UAAWC,IAAOC,WAAtB,+BACqBP,EADrB,W,gBCdS,SAASQ,EAAT,GAA6D,IAAlCC,EAAiC,EAAjCA,gBAAiBR,EAAgB,EAAhBA,aACzD,OACE,oBAAII,UAAWC,IAAOI,KAAtB,SACGT,EAAaE,KAAI,SAAAC,GAAQ,OACxB,6BACE,wBACEO,KAAK,SACLC,KAAMR,EACNC,UAAWC,IAAOO,gBAClBC,QAASL,EAJX,SAMGL,KAPIA,QCPjB,IAQeW,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,4BAAIA,K,gBCcOC,EAbC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,0BAASd,UAAWC,IAAOc,QAA3B,UACI,6BAAKF,IACJC,M,MCAM,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAsBM1B,EAAe,CAAEqB,OAAME,UAASE,OAChC1B,EAAe4B,OAAOC,KAAK5B,GAE3B6B,EAAqB9B,EAAa+B,QACtC,SAACC,EAAK7B,GAAN,OAAmB6B,EAAM/B,EAAaE,KACtC,GAEI8B,EAAkCC,KAAKC,MAC1Cb,EAAOQ,EAAsB,KAGhC,OACE,qCACE,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAACV,EAAD,CACEC,gBAnCgB,SAAA4B,GAGtB,OAFiBA,EAAEC,OAAX1B,MAGN,IAAK,OACHY,GAAQ,SAAAe,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHb,GAAW,SAAAa,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHX,GAAO,SAAAW,GAAS,OAAIA,EAAY,OAuB9BtC,aAAcA,MAGlB,cAAC,EAAD,CAASiB,MAAM,aAAf,SACGa,EACC,cAAC,EAAD,CACE7B,aAAcA,EACdD,aAAcA,EACdF,MAAOgC,EACP/B,mBAAoBkC,IAGtB,cAAC,EAAD,CAAclB,QAAQ,2BCvDhCwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACrB,EAAD,MAEFsB,SAASC,eAAe,W","file":"static/js/main.e8523b7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"listStatistics_statistics__1A2uQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"feedback-options_list__3mym6\",\"buttonContainer\":\"feedback-options_buttonContainer__BibGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__5Sh3t\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./listStatistics.module.css\"\r\n\r\nconst Statistics = ({\r\n  total,\r\n  positivePercentage,\r\n  feedbackKeys,\r\n  feedbacksObj,\r\n}) => {\r\n  return (\r\n    <ul>\r\n      {feedbackKeys.map(feedback => (\r\n        <li key={feedback} className={styles.statistics}>\r\n          <span>\r\n            {feedback}:{feedbacksObj[feedback]}\r\n          </span>\r\n        </li>\r\n      ))}\r\n      <li className={styles.statistics}>Total:{total}</li>\r\n      <li className={styles.statistics}>\r\n        Positive feedback:{positivePercentage}%\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n  feedbacksObj: PropTypes.object.isRequired,\r\n  feedbackKeys: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./feedback-options.module.css\"\r\n\r\n\r\n\r\nexport default function FeedbackOptions({ onLeaveFeedback, feedbackKeys }) {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {feedbackKeys.map(feedback => (\r\n        <li key={feedback}>\r\n          <button\r\n            type=\"button\"\r\n            name={feedback}\r\n            className={styles.buttonContainer}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {feedback}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  feedbackKeys: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n    <p>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './section.module.css'\r\n\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section className={styles.section}>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>\r\n)\r\n\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;","import { useState } from 'react';\nimport Statistics from './list-statistics';\nimport FeedbackOptions from './feedback-options';\nimport Notification from './notification';\nimport Section from './section';\nimport './base-style.module.css';\n\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = e => {\n    const { name } = e.target;\n\n    switch (name) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const feedbacksObj = { good, neutral, bad };\n  const feedbackKeys = Object.keys(feedbacksObj);\n\n  const countTotalFeedback = feedbackKeys.reduce(\n    (acc, feedback) => acc + feedbacksObj[feedback],\n    0,\n  );\n  const countPositiveFeedbackPercentage = Math.round(\n    (good / countTotalFeedback) * 100,\n  );\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          onLeaveFeedback={onLeaveFeedback}\n          feedbackKeys={feedbackKeys}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback ? (\n          <Statistics\n            feedbacksObj={feedbacksObj}\n            feedbackKeys={feedbackKeys}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"modern-normalize/modern-normalize.css\";\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}